import java.util.ArrayList;
import java.util.Collections;

public class SudokuSolver {

    public boolean solve(int[][] board) {
        for (int row = 0; row < 9; row++) {
            for (int col = 0; col < 9; col++) {
                if (board[row][col] == 0) {
                    ArrayList<Integer> numbers = new ArrayList<>();
                    for (int n = 1; n <= 9; n++) {
                        numbers.add(n);
                    }
                    Collections.shuffle(numbers);  // Randomize trial order

                    for (int num : numbers) {
                        if (isSafe(board, row, col, num)) {
                            board[row][col] = num;
                            if (solve(board)) return true;
                            board[row][col] = 0;
                        }
                    }
                    return false; // No valid number found
                }
            }
        }
        return true; // Board is filled successfully
    }

    public boolean isSafe(int[][] board, int row, int col, int num) {
        for (int i = 0; i < 9; i++) {
            if (board[row][i] == num || board[i][col] == num) return false;
        }

        int startRow = row - row % 3;
        int startCol = col - col % 3;

        for (int i = startRow; i < startRow + 3; i++) {
            for (int j = startCol; j < startCol + 3; j++) {
                if (board[i][j] == num) return false;
            }
        }

        return true;
    }
}

// Testing Purposes Only

public class TestSudokuSolver {

    public static void printBoard(int[][] board) {
        for (int row = 0; row < 9; row++) {
            if (row % 3 == 0 && row != 0) {
                System.out.println("------+-------+------");
            }
            for (int col = 0; col < 9; col++) {
                if (col % 3 == 0 && col != 0) {
                    System.out.print("| ");
                }
                int val = board[row][col];
                System.out.print(val == 0 ? ". " : val + " ");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        int[][] board = new int[9][9];  // Empty board with all zeros

        SudokuSolver solver = new SudokuSolver();

        System.out.println("Initial Board (Empty):");
        printBoard(board);

        if (solver.solve(board)) {
            System.out.println("\nSolved Board:");
            printBoard(board);
        } else {
            System.out.println("No solution exists for the given board.");
        }
    }
}
